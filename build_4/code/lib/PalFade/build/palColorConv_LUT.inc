

; Look up tables for converting to/from VCE format (GRB) and expanded format (_G_R_B).
;
; VCE GRB format is 9bits:
;
;    lsb = (g)RB.
;        Bits: 0-2 -> Blue
;        Bits: 3-5 -> Red
;        Bits: 6-7 -> Green    
;            Note: Last upper bit of Green is in MSB
;    msb = G(rb).
;        Bits: 1 -> Green    
;            Note: no red, blue in this MSB. Only the higest bit of green.
;
; Expanded _G_R_B format is 12bits:
;
;    lsb = _R_B
;        Bits: 0-2 -> Blue
;        Bits: 3 -> reserved (must be 0)
;        Bits: 4-6 -> Red
;        Bits: 7 -> reserved (must be 0)
;    msb = _G
;        Bits: 0-2 -> Green
;        Bits: 3-7 -> reserved (must be 0)
    


depackVCE2RB.LUT:
    ; GRB.lsb -> _R_B
; BLUE  _0   _1   _2   _3   _4   _5   _6   _7  
  .db  $00, $01, $02, $03, $04, $05, $06, $07  ; 0_  RED.    Green as 0  
  .db  $10, $11, $12, $13, $14, $15, $16, $17  ; 1_  RED.    Green as 0  
  .db  $20, $21, $22, $23, $24, $25, $26, $27  ; 2_  RED.    Green as 0  
  .db  $30, $31, $32, $33, $34, $35, $36, $37  ; 3_  RED.    Green as 0  
  .db  $40, $41, $42, $43, $44, $45, $46, $47  ; 4_  RED.    Green as 0  
  .db  $50, $51, $52, $53, $54, $55, $56, $57  ; 5_  RED.    Green as 0  
  .db  $60, $61, $62, $63, $64, $65, $66, $67  ; 6_  RED.    Green as 0  
  .db  $70, $71, $72, $73, $74, $75, $76, $77  ; 7_  RED.    Green as 0  
  .db  $00, $01, $02, $03, $04, $05, $06, $07  ; 0_  RED.    Green as 1  
  .db  $10, $11, $12, $13, $14, $15, $16, $17  ; 1_  RED.    Green as 1  
  .db  $20, $21, $22, $23, $24, $25, $26, $27  ; 2_  RED.    Green as 1  
  .db  $30, $31, $32, $33, $34, $35, $36, $37  ; 3_  RED.    Green as 1  
  .db  $40, $41, $42, $43, $44, $45, $46, $47  ; 4_  RED.    Green as 1  
  .db  $50, $51, $52, $53, $54, $55, $56, $57  ; 5_  RED.    Green as 1  
  .db  $60, $61, $62, $63, $64, $65, $66, $67  ; 6_  RED.    Green as 1  
  .db  $70, $71, $72, $73, $74, $75, $76, $77  ; 7_  RED.    Green as 1  
  .db  $00, $01, $02, $03, $04, $05, $06, $07  ; 0_  RED.    Green as 2  
  .db  $10, $11, $12, $13, $14, $15, $16, $17  ; 1_  RED.    Green as 2  
  .db  $20, $21, $22, $23, $24, $25, $26, $27  ; 2_  RED.    Green as 2  
  .db  $30, $31, $32, $33, $34, $35, $36, $37  ; 3_  RED.    Green as 2  
  .db  $40, $41, $42, $43, $44, $45, $46, $47  ; 4_  RED.    Green as 2  
  .db  $50, $51, $52, $53, $54, $55, $56, $57  ; 5_  RED.    Green as 2  
  .db  $60, $61, $62, $63, $64, $65, $66, $67  ; 6_  RED.    Green as 2  
  .db  $70, $71, $72, $73, $74, $75, $76, $77  ; 7_  RED.    Green as 2  
  .db  $00, $01, $02, $03, $04, $05, $06, $07  ; 0_  RED.    Green as 3  
  .db  $10, $11, $12, $13, $14, $15, $16, $17  ; 1_  RED.    Green as 3  
  .db  $20, $21, $22, $23, $24, $25, $26, $27  ; 2_  RED.    Green as 3  
  .db  $30, $31, $32, $33, $34, $35, $36, $37  ; 3_  RED.    Green as 3  
  .db  $40, $41, $42, $43, $44, $45, $46, $47  ; 4_  RED.    Green as 3  
  .db  $50, $51, $52, $53, $54, $55, $56, $57  ; 5_  RED.    Green as 3  
  .db  $60, $61, $62, $63, $64, $65, $66, $67  ; 6_  RED.    Green as 3  
  .db  $70, $71, $72, $73, $74, $75, $76, $77  ; 7_  RED.    Green as 3  


depackVCE2G.LUT.lsb:
    ; GRB.lsb -> _G & 0x03 
;       _0   _1   _2   _3   _4   _5   _6   _7  
  .db  $00, $00, $00, $00, $00, $00, $00, $00  ; RGB as 7  
  .db  $00, $00, $00, $00, $00, $00, $00, $00  ; RGB as 15  
  .db  $00, $00, $00, $00, $00, $00, $00, $00  ; RGB as 23  
  .db  $00, $00, $00, $00, $00, $00, $00, $00  ; RGB as 31  
  .db  $00, $00, $00, $00, $00, $00, $00, $00  ; RGB as 39  
  .db  $00, $00, $00, $00, $00, $00, $00, $00  ; RGB as 47  
  .db  $00, $00, $00, $00, $00, $00, $00, $00  ; RGB as 55  
  .db  $00, $00, $00, $00, $00, $00, $00, $00  ; RGB as 63  
  .db  $01, $01, $01, $01, $01, $01, $01, $01  ; RGB as 71  
  .db  $01, $01, $01, $01, $01, $01, $01, $01  ; RGB as 79  
  .db  $01, $01, $01, $01, $01, $01, $01, $01  ; RGB as 87  
  .db  $01, $01, $01, $01, $01, $01, $01, $01  ; RGB as 95  
  .db  $01, $01, $01, $01, $01, $01, $01, $01  ; RGB as 103  
  .db  $01, $01, $01, $01, $01, $01, $01, $01  ; RGB as 111  
  .db  $01, $01, $01, $01, $01, $01, $01, $01  ; RGB as 119  
  .db  $01, $01, $01, $01, $01, $01, $01, $01  ; RGB as 127  
  .db  $02, $02, $02, $02, $02, $02, $02, $02  ; RGB as 135  
  .db  $02, $02, $02, $02, $02, $02, $02, $02  ; RGB as 143  
  .db  $02, $02, $02, $02, $02, $02, $02, $02  ; RGB as 151  
  .db  $02, $02, $02, $02, $02, $02, $02, $02  ; RGB as 159  
  .db  $02, $02, $02, $02, $02, $02, $02, $02  ; RGB as 167  
  .db  $02, $02, $02, $02, $02, $02, $02, $02  ; RGB as 175  
  .db  $02, $02, $02, $02, $02, $02, $02, $02  ; RGB as 183  
  .db  $02, $02, $02, $02, $02, $02, $02, $02  ; RGB as 191  
  .db  $03, $03, $03, $03, $03, $03, $03, $03  ; RGB as 199  
  .db  $03, $03, $03, $03, $03, $03, $03, $03  ; RGB as 207  
  .db  $03, $03, $03, $03, $03, $03, $03, $03  ; RGB as 215  
  .db  $03, $03, $03, $03, $03, $03, $03, $03  ; RGB as 223  
  .db  $03, $03, $03, $03, $03, $03, $03, $03  ; RGB as 231  
  .db  $03, $03, $03, $03, $03, $03, $03, $03  ; RGB as 239  
  .db  $03, $03, $03, $03, $03, $03, $03, $03  ; RGB as 247  
  .db  $03, $03, $03, $03, $03, $03, $03, $03  ; RGB as 255  


depackVCE2G.LUT.msb:
    ; GRB.msb -> _G << 2 
  .db $00, $04


packRB2VCE.LUT:
    ; _R_B - > (g)RB.lsb 
; BLUE  _0   _1   _2   _3   _4   _5   _6   _7  
  .db  $00, $01, $02, $03, $04, $05, $06, $07  ; 0_  RED.
  .db  $00, $01, $02, $03, $04, $05, $06, $07  ; 0_  RED.
  .db  $08, $09, $0a, $0b, $0c, $0d, $0e, $0f  ; 1_  RED.
  .db  $08, $09, $0a, $0b, $0c, $0d, $0e, $0f  ; 1_  RED.
  .db  $10, $11, $12, $13, $14, $15, $16, $17  ; 2_  RED.
  .db  $10, $11, $12, $13, $14, $15, $16, $17  ; 2_  RED.
  .db  $18, $19, $1a, $1b, $1c, $1d, $1e, $1f  ; 3_  RED.
  .db  $18, $19, $1a, $1b, $1c, $1d, $1e, $1f  ; 3_  RED.
  .db  $20, $21, $22, $23, $24, $25, $26, $27  ; 4_  RED.
  .db  $20, $21, $22, $23, $24, $25, $26, $27  ; 4_  RED.
  .db  $28, $29, $2a, $2b, $2c, $2d, $2e, $2f  ; 5_  RED.
  .db  $28, $29, $2a, $2b, $2c, $2d, $2e, $2f  ; 5_  RED.
  .db  $30, $31, $32, $33, $34, $35, $36, $37  ; 6_  RED.
  .db  $30, $31, $32, $33, $34, $35, $36, $37  ; 6_  RED.
  .db  $38, $39, $3a, $3b, $3c, $3d, $3e, $3f  ; 7_  RED.
  .db  $38, $39, $3a, $3b, $3c, $3d, $3e, $3f  ; 7_  RED.
  .db  $00, $01, $02, $03, $04, $05, $06, $07  ; 8_  RED.
  .db  $00, $01, $02, $03, $04, $05, $06, $07  ; 8_  RED.
  .db  $08, $09, $0a, $0b, $0c, $0d, $0e, $0f  ; 9_  RED.
  .db  $08, $09, $0a, $0b, $0c, $0d, $0e, $0f  ; 9_  RED.
  .db  $10, $11, $12, $13, $14, $15, $16, $17  ; 10_  RED.
  .db  $10, $11, $12, $13, $14, $15, $16, $17  ; 10_  RED.
  .db  $18, $19, $1a, $1b, $1c, $1d, $1e, $1f  ; 11_  RED.
  .db  $18, $19, $1a, $1b, $1c, $1d, $1e, $1f  ; 11_  RED.
  .db  $20, $21, $22, $23, $24, $25, $26, $27  ; 12_  RED.
  .db  $20, $21, $22, $23, $24, $25, $26, $27  ; 12_  RED.
  .db  $28, $29, $2a, $2b, $2c, $2d, $2e, $2f  ; 13_  RED.
  .db  $28, $29, $2a, $2b, $2c, $2d, $2e, $2f  ; 13_  RED.
  .db  $30, $31, $32, $33, $34, $35, $36, $37  ; 14_  RED.
  .db  $30, $31, $32, $33, $34, $35, $36, $37  ; 14_  RED.
  .db  $38, $39, $3a, $3b, $3c, $3d, $3e, $3f  ; 15_  RED.
  .db  $38, $39, $3a, $3b, $3c, $3d, $3e, $3f  ; 15_  RED.


packG2VCE.LUT.lsb:
    ; _G -> G(rb).lsb 
  .db  $00, $40, $80, $c0, $00, $40, $80, $c0


packG2VCE.LUT.msb:
    ; _G -> G(rb).msb 
  .db  $00, $00, $00, $00, $01, $01, $01, $01
